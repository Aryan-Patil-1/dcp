import java.util.*;

public class ZeroSumSubarrays {
    public static List<int[]> findSubarrays(int[] arr) {
        List<int[]> result = new ArrayList<>();
        Map<Integer, List<Integer>> map = new HashMap<>();
        int prefixSum = 0;

        for (int i = 0; i < arr.length; i++) {
            prefixSum += arr[i];

            // Case 1: Subarray from 0 to i
            if (prefixSum == 0) {
                result.add(new int[]{0, i});
            }

            // Case 2: Subarray(s) from previous prefixSum
            if (map.containsKey(prefixSum)) {
                for (int start : map.get(prefixSum)) {
                    result.add(new int[]{start + 1, i});
                }
            }

            // Store index for this prefixSum
            map.computeIfAbsent(prefixSum, k -> new ArrayList<>()).add(i);
        }
        return result;
    }

    public static void main(String[] args) {
        int[] arr = {3, 4, -7, 1, 3, -4, -2, -2};
        List<int[]> res = findSubarrays(arr);

        for (int[] p : res) {
            System.out.println("Subarray: (" + p[0] + ", " + p[1] + ")");
        }
    }
}
